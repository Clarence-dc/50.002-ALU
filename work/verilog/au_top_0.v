/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    output reg [17:0] r,
    output reg [7:0] sevenseg,
    input [4:0] gamebutton
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [8-1:0] M_seg_seg;
  wire [4-1:0] M_seg_sel;
  reg [20-1:0] M_seg_values;
  multi_seven_seg_2 seg (
    .clk(clk),
    .rst(rst),
    .values(M_seg_values),
    .seg(M_seg_seg),
    .sel(M_seg_sel)
  );
  wire [8-1:0] M_seg18_seg;
  wire [18-1:0] M_seg18_sel;
  reg [90-1:0] M_seg18_values;
  eighteen_seven_seg_3 seg18 (
    .clk(clk),
    .rst(rst),
    .values(M_seg18_values),
    .seg(M_seg18_seg),
    .sel(M_seg18_sel)
  );
  wire [90-1:0] M_game_seg18;
  wire [144-1:0] M_game_arr;
  wire [20-1:0] M_game_io_seg;
  reg [5-1:0] M_game_button;
  game_4 game (
    .clk(clk),
    .rst(rst),
    .button(M_game_button),
    .seg18(M_game_seg18),
    .arr(M_game_arr),
    .io_seg(M_game_io_seg)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    io_seg = 8'hff;
    io_sel = 4'hf;
    sevenseg = M_seg18_seg;
    r = ~M_seg18_sel;
    M_seg18_values = 90'h21084210842108421084210;
    M_seg_values = 20'h84210;
    io_seg = ~M_seg_seg;
    io_sel = ~M_seg_sel;
    M_game_button = gamebutton;
    M_seg_values = M_game_io_seg;
    M_seg18_values = M_game_seg18;
  end
endmodule
