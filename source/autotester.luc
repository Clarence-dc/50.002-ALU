module autotester (
    input clk,  // clock
    input rst,  // reset
    output out[16],
    output seg[4][5],
    output io_led[3][8]
  ) {
  alu alu;
  counter slowclk(#SIZE(1),#DIV(27), .clk(clk), .rst(rst));
  edge_detector slowclkedge(.clk(clk));
  fsm auto_controller(.clk(slowclkedge.out)) = {S0,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,ERROR};
  always {
    alu.a = 0;
    alu.b = 0;
    alu.alufn = 0;
    slowclkedge.in = slowclk.value;    // use edge detector to slow clock
    out = 0;
    seg = alu.seg;
    io_led = 3x{{8h00}};
    case(auto_controller.q){
          auto_controller.S0:// add -56 & 55 = -1
          alu.a = b1111111111001000;
          alu.b = b0000000000110111;
          io_led[1] = alu.out[15:8];
          io_led[0] = alu.out[7:0];
          alu.alufn = b000000;
          if(alu.out == b1111111111111111){
            auto_controller.d = auto_controller.S1;
            } else{
            auto_controller.d = auto_controller.ERROR;
            }
          auto_controller.S1:// add overflow 32,868+32,814 = 65,682
          alu.a = b1000000001100100;
          alu.b = b1000000000101110;
          io_led[1] = alu.out[15:8];
          io_led[0] = alu.out[7:0];
          alu.alufn = b000000;
          if(alu.out == b0000000010010010){
            auto_controller.d = auto_controller.S2;
            } else{
            auto_controller.d = auto_controller.ERROR;
            }
          auto_controller.S2:// sub 6+(-14) = -8
          alu.a = b0000000000000110;
          alu.b = b0000000000001110;
          io_led[1] = alu.out[15:8];
          io_led[0] = alu.out[7:0];
          alu.alufn = b000001;
          if(alu.out == b1111111111111000){
            auto_controller.d = auto_controller.S3;
            } else{
            auto_controller.d = auto_controller.ERROR;
            }
          auto_controller.S3:// mult 4x4 = 16
          alu.a = b0000000000000100;
          alu.b = b0000000000000100;
          io_led[1] = alu.out[15:8];
          io_led[0] = alu.out[7:0];
          alu.alufn = b000010;
          if(alu.out == b0000000000010000){
            auto_controller.d = auto_controller.S4;
            } else{
            auto_controller.d = auto_controller.ERROR;
            }
          auto_controller.S4:// modulo 10/3 = 3
          alu.a = b0000000000001010;
          alu.b = b0000000000000011;
          io_led[1] = alu.out[15:8];
          io_led[0] = alu.out[7:0];
          alu.alufn = b000011;
          if(alu.out == b0000000000000011){
            auto_controller.d = auto_controller.S5;
            } else{
            auto_controller.d = auto_controller.ERROR;
            }
          auto_controller.S5:// AND
          alu.a = b0000000000001010;
          alu.b = b0000000000000011;
          io_led[1] = alu.out[15:8];
          io_led[0] = alu.out[7:0];
          alu.alufn = b011000;
          if(alu.out == b0000000000000010){
            auto_controller.d = auto_controller.S6;
            } else{
            auto_controller.d = auto_controller.ERROR;
            }
          auto_controller.S6:// OR
          alu.a = b0000000000001010;
          alu.b = b0000000000000011;
          io_led[1] = alu.out[15:8];
          io_led[0] = alu.out[7:0];
          alu.alufn = b011110;
          if(alu.out == b0000000000001011){
            auto_controller.d = auto_controller.S7;
            } else{
            auto_controller.d = auto_controller.ERROR;
            }
          auto_controller.S7:// XOR
          alu.a = b0000000000001010;
          alu.b = b0000000000000011;
          io_led[1] = alu.out[15:8];
          io_led[0] = alu.out[7:0];
          alu.alufn = b010110;
          if(alu.out == b0000000000001001){
            auto_controller.d = auto_controller.S8;
            } else{
            auto_controller.d = auto_controller.ERROR;
            }
          auto_controller.S8:// LDR
          alu.a = b0000000000001010;
          alu.b = b0000000000000011;
          io_led[1] = alu.out[15:8];
          io_led[0] = alu.out[7:0];
          alu.alufn = b011010;
          if(alu.out == b0000000000001010){
            auto_controller.d = auto_controller.S9;
            } else{
            auto_controller.d = auto_controller.ERROR;
            }
          auto_controller.S9:// SHL
          alu.a = b0000000001001010;
          alu.b = b0000000000000010;
          io_led[1] = alu.out[15:8];
          io_led[0] = alu.out[7:0];
          alu.alufn = b100000;
          if(alu.out == b0000000100101000){
            auto_controller.d = auto_controller.S10;
            } else{
            auto_controller.d = auto_controller.ERROR;
            }
          auto_controller.S10:// SHR
          alu.a = b0000000010110010;
          alu.b = b0000000000000100;
          io_led[1] = alu.out[15:8];
          io_led[0] = alu.out[7:0];
          alu.alufn = b100001;
          if(alu.out == b0000000000001011){
            auto_controller.d = auto_controller.S11;
            } else{
            auto_controller.d = auto_controller.ERROR;
            }
          auto_controller.S11:// SRA
          alu.a = b1000000010110010;
          alu.b = b0000000000000100;
          io_led[1] = alu.out[15:8];
          io_led[0] = alu.out[7:0];
          alu.alufn = b100011;
          if(alu.out == b1111100000001011){
            auto_controller.d = auto_controller.S12;
            } else{
            auto_controller.d = auto_controller.ERROR;
            }
          auto_controller.S12:// A == B
          alu.a = b0000000000000100;
          alu.b = b0000000000000100;
          alu.alufn = b110101;
          io_led[1] = alu.out[15:8];
          io_led[0] = alu.out[7:0];
          if(alu.out == b1){
            auto_controller.d = auto_controller.S13;
            } else{
            auto_controller.d = auto_controller.ERROR;
            }
          auto_controller.S13:// A < B
          alu.a = b0000000000000010;
          alu.b = b0000000000000100;
          alu.alufn = b111001;
          io_led[1] = alu.out[15:8];
          io_led[0] = alu.out[7:0];
          if(alu.out == b1){
            auto_controller.d = auto_controller.S14;
            } else{
            auto_controller.d = auto_controller.ERROR;
            }
          auto_controller.S14:// A <= B
          alu.a = b0000000000000100;
          alu.b = b0000000000000100;
          alu.alufn = b111101;
          io_led[1] = alu.out[15:8];
          io_led[0] = alu.out[7:0];
          if(alu.out == b1){
            auto_controller.d = auto_controller.S15;
            } else{
            auto_controller.d = auto_controller.ERROR;
            }
          auto_controller.S15:// error
          alu.a = b1000000000000100;
          alu.b = b0000000000000100;
          alu.alufn = b111101;
          io_led[1] = alu.out[15:8];
          io_led[0] = alu.out[7:0];
          if(alu.out == b11){// error on purpose
            auto_controller.d = auto_controller.S0;
            } else{
            auto_controller.d = auto_controller.ERROR;
            }
          auto_controller.ERROR:
          seg = {b01110,b01011,b01011,16}; // E r r
          auto_controller.d = auto_controller.S0;
        }
}

  }
  