 module regfile (
    input rst,
    input clk,  // clock
    input write_address_1[5],
    input write_data_1[16],
    input write_enable_1,
    input write_address_2[5],
    input write_data_2[16],
    input write_enable_2,
    input write_address_3[5],
    input write_data_3[16],
    input write_enable_3,
    input write_address_4[5],
    input write_data_4[16],
    input write_enable_4,
    output out[32][16]
  ){
  dff registers[32][16](.clk(clk)); 
  
  always {
    //always read 
    
    // check if write_en and its not R0 
    if (write_address_1 != b00000 && write_enable_1){
        registers.d[write_address_1] = write_data_1;
    }
    if (write_address_2 != b00000 && write_enable_2){
        registers.d[write_address_2] = write_data_2;
    }
    if (write_address_3 != b00000 && write_enable_3){
        registers.d[write_address_3] = write_data_3;
    }
    if (write_address_4 != b00000 && write_enable_4){
        registers.d[write_address_4] = write_data_4;
    }
    out = registers.q;
    if (rst){
      registers.d = 32x{{16b0}};
    }
  }
}
